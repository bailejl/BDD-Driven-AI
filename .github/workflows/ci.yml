name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

env:
  NODE_VERSION: '24'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

      - name: Run linting
        run: npm run lint

      - name: Run build
        run: npm run build

      - name: Upload test coverage
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: coverage/
          retention-days: 7

  e2e-tests:
    runs-on: ubuntu-latest
    needs: test

    services:
      selenium:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
          - 7900:7900
        options: --shm-size=2gb

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      # - name: Wait for Selenium
      #   run: |
      #     timeout 60s bash -c 'until curl -f http://localhost:4444/wd/hub/status; do sleep 2; done'

      - name: Run E2E tests
        run: npm run e2e:ci
        env:
          PLAYWRIGHT_HTML_OPEN: never

      - name: Upload E2E screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-screenshots
          path: .tmp/
          retention-days: 7

  security-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Check for high/critical vulnerabilities
        run: |
          AUDIT_RESULT=$(npm audit --audit-level=high --json | jq '.metadata.vulnerabilities.high + .metadata.vulnerabilities.critical')
          if [ "$AUDIT_RESULT" -gt 0 ]; then
            echo "❌ High or critical vulnerabilities found: $AUDIT_RESULT"
            exit 1
          else
            echo "✅ No high or critical vulnerabilities found"
          fi

  quality-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Check code formatting
        run: npx prettier --check "**/*.{ts,tsx,js,jsx,json,md}"

      - name: Check TypeScript compilation
        run: npx tsc --noEmit

      - name: Check for unused dependencies
        run: npx depcheck --ignores="@types/*,@wdio/*,@playwright/mcp,eslint-plugin-mui,identity-obj-proxy,jest-environment-jsdom"
