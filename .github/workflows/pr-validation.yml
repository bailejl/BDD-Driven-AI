name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main]

permissions:
  contents: read
  pull-requests: read

env:
  NODE_VERSION: '24'

jobs:
  mandatory-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

      - name: Run linting
        run: npm run lint

      - name: Run build
        run: npm run build

      - name: Check for critical security vulnerabilities
        run: |
          # Allow moderate/low vulnerabilities but fail on high/critical
          npm audit --audit-level=high || {
            echo "❌ High or critical security vulnerabilities found"
            echo "Please run 'npm audit fix' or address manually before merging"
            exit 1
          }

  e2e-validation:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.title, '[e2e]')

    services:
      selenium:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
          - 7900:7900
        options: --shm-size=2gb

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Wait for Selenium
        run: |
          timeout 60s bash -c 'until curl -f http://localhost:4444/wd/hub/status; do sleep 2; done'

      - name: Run E2E tests
        run: npm run e2e:headless
        env:
          SELENIUM_HOST: localhost

      - name: Upload E2E artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-failure-artifacts
          path: |
            .tmp/
            allure-results/
          retention-days: 7

  merge-readiness:
    runs-on: ubuntu-latest
    needs: [mandatory-tests]
    if: always()

    steps:
      - name: Check all required jobs passed
        run: |
          echo "Mandatory Tests: ${{ needs.mandatory-tests.result }}"

          if [ "${{ needs.mandatory-tests.result }}" != "success" ]; then
            echo "❌ Required checks failed"
            exit 1
          fi

          echo "✅ All required checks passed - PR ready for review"
