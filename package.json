{
  "name": "cucumber-declarative-gherkin",
  "version": "1.0.0",
  "description": "Demo of how to write declarative Gherkin",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview",
    "test": "jest",
    "test:watch": "jest --watch",
    "lint": "eslint 'src/**/*.{ts,tsx}'",
    "lint:fix": "eslint src/ --fix",
    "lint:mega": "npx mega-linter-runner --flavor javascript",
    "type-check": "tsc --noEmit",
    "e2e": "start-server-and-test dev 4200 'npx bddgen --tags \"not @brokenScenario\" && npx playwright test'",
    "e2e:demo": "start-server-and-test dev 4200 'npx bddgen && npx playwright test'",
    "e2e:debug": "start-server-and-test dev 4200 'npx bddgen --tags \"not @brokenScenario\" && npx playwright test --debug'",
    "e2e:ui": "start-server-and-test dev 4200 'npx playwright test --ui'",
    "e2e:ci": "start-server-and-test dev 4200 'CI=true npx bddgen --tags \"not @brokenScenario\" && npx playwright test'",
    "bdd-gen": "npx bdd-gen",
    "snippets": "npx bdd-gen --dry-run",
    "prepare": "husky",
    "prettier:write": "npx prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "setup": "npm run setup:install && npm run setup:validate && npm run setup:complete",
    "setup:install": "npm install && npx playwright install",
    "setup:validate": "npm run type-check && npm run lint && npm run test -- --coverage --verbose=false",
    "setup:complete": "echo 'âœ… Setup complete! Run npm run dev to start development or npm run e2e:ci to run E2E tests'"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bailejl/cucumber-declarative-gherkin.git"
  },
  "keywords": [
    "cucumber",
    "gherkin",
    "declarative",
    "declarative-gherkin",
    "bdd"
  ],
  "author": "Joe L. Bailey",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/bailejl/cucumber-declarative-gherkin/issues"
  },
  "homepage": "https://github.com/bailejl/cucumber-declarative-gherkin#readme",
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@hookform/resolvers": "^5.1.1",
    "@mui/icons-material": "^6.0.0",
    "@mui/material": "^6.0.0",
    "@mui/x-date-pickers": "^7.0.0",
    "date-fns": "^2.30.0",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-hook-form": "^7.0.0",
    "react-router-dom": "^7.0.0",
    "yup": "^1.0.0"
  },
  "devDependencies": {
    "@cucumber/cucumber": "^11.1.0",
    "@jest/globals": "^30.0.0",
    "@mui/styles": "^6.4.12",
    "@playwright/mcp": "^0.0.29",
    "@playwright/test": "^1.49.1",
    "@testing-library/jest-dom": "^6.0.0",
    "@testing-library/react": "^16.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.0.1",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "@typescript-eslint/utils": "^8.34.1",
    "@vitejs/plugin-react": "^4.0.0",
    "babel-jest": "^30.0.0",
    "eslint": "^8.0.0",
    "eslint-import-resolver-typescript": "^4.4.3",
    "eslint-plugin-functional": "^6.6.3",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jest": "^29.0.1",
    "eslint-plugin-mui": "^0.1.1",
    "eslint-plugin-playwright": "^2.2.0",
    "eslint-plugin-react": "^7.0.0",
    "eslint-plugin-react-hooks": "^5.0.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-testing-library": "^7.5.3",
    "fs-extra": "^11.3.0",
    "husky": "^9.1.7",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^30.0.0",
    "jest-environment-jsdom": "^30.0.0",
    "lint-staged": "^16.1.2",
    "playwright-bdd": "^7.5.0",
    "prettier": "^3.5.3",
    "sass-embedded": "^1.89.2",
    "start-server-and-test": "^2.0.0",
    "ts-jest": "^29.4.0",
    "typescript": "^5.0.0",
    "vite": "^5.0.0",
    "vite-plugin-svgr": "^4.3.0"
  },
  "engines": {
    "node": ">=18"
  },
  "lint-staged": {
    "src/**/*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "src/**/*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}
